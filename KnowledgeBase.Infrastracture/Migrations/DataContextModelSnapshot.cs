// <auto-generated />
using System;
using KnowledgeBase.Infrastracture;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KnowledgeBase.Infrastracture.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KnowledgeBase.Infrastracture.DocType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DocType");
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("NavigationId");

                    b.HasKey("Id");

                    b.HasIndex("NavigationId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.DocumentTag", b =>
                {
                    b.Property<int>("DocumentId");

                    b.Property<int>("TagId");

                    b.HasKey("DocumentId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("DocumentTag");
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.Navigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DocTypeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("DocTypeId");

                    b.ToTable("Navigation");
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DocTypeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DocTypeId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.Document", b =>
                {
                    b.HasOne("KnowledgeBase.Infrastracture.Navigation", "Navigation")
                        .WithMany()
                        .HasForeignKey("NavigationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.DocumentTag", b =>
                {
                    b.HasOne("KnowledgeBase.Infrastracture.Document", "Document")
                        .WithMany("DocumentTags")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KnowledgeBase.Infrastracture.Tag", "Tag")
                        .WithMany("DocumentTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.Navigation", b =>
                {
                    b.HasOne("KnowledgeBase.Infrastracture.DocType", "DocType")
                        .WithMany()
                        .HasForeignKey("DocTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KnowledgeBase.Infrastracture.Tag", b =>
                {
                    b.HasOne("KnowledgeBase.Infrastracture.DocType", "DocType")
                        .WithMany()
                        .HasForeignKey("DocTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
